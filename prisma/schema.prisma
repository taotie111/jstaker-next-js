generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model error_information {
  id                  Int       @id @default(autoincrement())
  type                Int?
  errorFunction       String?   @db.VarChar(255)
  errorPageUrl        String?   @db.VarChar(255)
  errorFunctionParams String?   @db.VarChar(255)
  projectName         String?   @db.VarChar(255)
  uid                 String?   @db.VarChar(255)
  token               String?   @db.VarChar(255)
  message             String?   @db.VarChar(255)
  ip                  String?   @db.VarChar(255)
  createdAt           DateTime? @default(now())
  updatedAt           DateTime? @updatedAt
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model performance_monitoring {
  startTime   DateTime? @db.DateTime(0)
  eventName   String?   @db.VarChar(255)
  endTime     DateTime? @db.DateTime(0)
  projectName String?   @db.VarChar(255)
  message     String?   @db.VarChar(255)
  id          Int       @id @default(autoincrement())
  ip          String?   @db.VarChar(255)
  type        Int?
  duration    Int?
  uid         String?   @db.VarChar(255)
}

model web {
  id        Int       @id @default(autoincrement())
  name      String?   @db.VarChar(255)
  token     String?   @db.VarChar(255)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  roleLevel String?   @db.VarChar(255)
  remark    String?   @db.VarChar(255)
  address   String?   @db.VarChar(255)
}

model uv {
  id        Int      @id @default(autoincrement())
  clickName String?  @db.VarChar(255)
  uid       String?  @db.VarChar(255)
  token     String?  @db.VarChar(255)
  message   String?  @db.VarChar(255)
  ip        String?  @db.VarChar(255)
  date      DateTime @db.DateTime(0)
}

model account {
  id                       Int   @id
  userId                   Int   @unique(map: "Account_userId_key")
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?  @db.Text
  access_token             String?  @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?  @db.Text
  session_state            String?
  refresh_token_expires_in Int?
  createdAt                DateTime @default(now())
  updatedAt                DateTime
  user                     User     @relation(fields: [userId], references: [id], map: "Account_userId_fkey")

  @@unique([provider, providerAccountId], map: "Account_provider_providerAccountId_key")
  @@index([userId], map: "Account_userId_idx")
}

model authenticator {
  credentialID         String  @unique(map: "Authenticator_credentialID_key")
  userId               Int
  providerAccountId    String
  credentialPublicKey  String
  counter              Int
  credentialDeviceType String
  credentialBackedUp   Boolean
  transports           String?
  user                 User    @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Authenticator_userId_fkey")

  @@id([userId, credentialID])
}

model loadScript {
  id         Int      @id @default(autoincrement())
  scriptName String?  @db.VarChar(255)
  uid        String?  @db.VarChar(255)
  token      String?  @db.VarChar(255)
  message    String?  @db.VarChar(255)
  ip         String?  @db.VarChar(255)
  date       DateTime @db.DateTime(0)
}

model session {
  id           Int   @id
  sessionToken String   @unique(map: "Session_sessionToken_key")
  userId       Int
  expires      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime
  user         User     @relation(fields: [userId], references: [id], map: "Session_userId_fkey")

  @@index([userId], map: "Session_userId_idx")
}

model User {
  id                  Int          @id @default(autoincrement())
  username            String?         @unique(map: "User_username_key")
  email               String?         @unique(map: "User_email_key")
  password            String?         @db.VarChar(255)
  createdAt           DateTime?       @default(now())
  updatedAt           DateTime?
  role                String?         @db.VarChar(255)
  last_login_browser  String?         @db.VarChar(255)
  last_login_device   String?         @db.VarChar(255)
  last_login_ip       String?         @db.VarChar(255)
  last_login_location String?         @db.VarChar(255)
  last_login_os       String?         @db.VarChar(255)
  last_login_time     DateTime?       @db.DateTime(0)
  emailVerified       DateTime?
  image               String?
  account             account?
  authenticator       authenticator[]
  session             session[]
}

model verificationtoken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token], map: "VerificationToken_identifier_token_key")
}

model perfermance_minutes {
  id        Int      @id @default(autoincrement())
  time      DateTime
  duration  Int
  clickName String   @db.VarChar(255)
  token     String   @db.VarChar(255)
}

model perfermance_hours {
  id        Int      @id @default(autoincrement())
  time      DateTime
  duration  Int
  clickName String   @db.VarChar(255)
  token     String   @db.VarChar(255)
}

model perfermance_days {
  id        Int      @id @default(autoincrement())
  time      DateTime
  duration  Int
  clickName String   @db.VarChar(255)
  token     String   @db.VarChar(255)
}

model pv_minutes {
  id        Int      @id @default(autoincrement())
  time      DateTime
  data      Int
  clickName String   @db.VarChar(255)
  token     String   @db.VarChar(255)
  ChinaTime String   @db.VarChar(255)
}

model pv_hours {
  id        Int      @id @default(autoincrement())
  time      DateTime
  data      Int
  clickName String   @db.VarChar(255)
  token     String   @db.VarChar(255)
  ChinaTime String   @db.VarChar(255)
}

model pv_days {
  id        Int      @id @default(autoincrement())
  time      DateTime
  data      Int
  clickName String   @db.VarChar(255)
  token     String   @db.VarChar(255)
  ChinaTime String   @db.VarChar(255)
}
